<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>Create Partition and Calculate</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/11/15 14:28:20.411</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/11/15 14:28:20.411</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>Hive</name>
    <server>localhost</server>
    <type>HIVE2</type>
    <access>Native</access>
    <database>default</database>
    <port>10000</port>
    <username>hadoop</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79a671da9da0ca</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>10000</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>48</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1184</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Abort job on creating Partitions</name>
      <description/>
      <type>ABORT</type>
      <message>Abort job on creating Partitions</message>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>544</xloc>
      <yloc>272</yloc>
    </entry>
    <entry>
      <name>Create Final partition Yellow</name>
      <description/>
      <type>SQL</type>
      <sql>Create TABLE IF NOT EXISTS yellow_part (	
	VendorID FLOAT,
	transports INT,
	one_p INT,
	two_p INT,
	three_p INT,
	four_p INT,
	more_p INT,
	avg_passanger FLOAT,
	avg_distance FLOAT, 
	avg_rate FLOAT,
	avg_fare FLOAT,
	05_extra INT,
	1_extra INT,
	tax INT,
	surcharge INT,
	avg_trip FLOAT,
	avg_toll FLOAT,
	avg_total FLOAT,
	credit_card_total INT,
	cash INT,
	no_charge INT,
	dispute INT,
	unknwn INT,
	voided_trip INT,
	standard_rate INT,
	jfk INT,
	newark INT,
	nessau_or_westchester INT,
	negotiated_fare INT,
	group_ride INT,
	SaF INT,
	no_SaF INT
) partitioned by (tmonth Int)
STORED AS ORC
LOCATION 'hdfs://localhost:9000/user/hadoop/yellow_raw/yellow'
TBLPROPERTIES ('transactional'='true');</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>2</nr>
      <xloc>336</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Write AVG to partition Yellow</name>
      <description/>
      <type>SQL</type>
      <sql>set hive.exec.dynamic.partition.mode=nonstrict;
insert overwrite table yellow_part partition(tmonth)
select 
	AVG(yr.VendorID) ,
	count(*),
	count(case passenger_count when 1 then 1 else null end),
	count(case passenger_count when 2 then 1 else null end),
	count(case passenger_count when 3 then 1 else null end),
	count(case passenger_count when 4 then 1 else null end),
	count(case when passenger_count > 4 then 1 else null end),
	AVG(yr.passenger_count) ,
	AVG(yr.trip_distance) , 
	AVG(yr.RatecodeID) ,
	AVG(yr.fare_amount) ,
	count(case extra when 0.5 then 1 else null end),
	count(case extra when 1 then 1 else null end),
	count(case mta_tax when 0.5 then 1 else null end),
	count(case when improvement_surcharge = 0.3000 then 1 else null end),
	AVG(yr.tip_amount) ,
	AVG(yr.tolls_amount) ,
	AVG(yr.total_amount),
	count(case payment_type when 1 then 1 else null end),
 	count(case payment_type when 2 then 1 else null end),
 	count(case payment_type when 3 then 1 else null end),
 	count(case payment_type when 4 then 1 else null end),
 	count(case payment_type when 5 then 1 else null end),
 	count(case payment_type when 6 then 1 else null end),
	count(case RatecodeID when 1 then 1 else null end),
 	count(case RatecodeID when 2 then 1 else null end),
 	count(case RatecodeID when 3 then 1 else null end),
 	count(case RatecodeID when 4 then 1 else null end),
 	count(case RatecodeID when 5 then 1 else null end),
 	count(case RatecodeID when 6 then 1 else null end),
	count(case when Store_and_fwd_flag = 'Y' then 1 else null end),
 	count(case when Store_and_fwd_flag = 'N' then 1 else null end),	
	MONTH(yr.tpep_pickup_datetime)
from yellow_raw yr WHERE MONTH(yr.tpep_pickup_datetime) IS NOT NULL GROUP BY yr.VendorID, MONTH(yr.tpep_pickup_datetime);</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>784</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Preparation</name>
      <description/>
      <type>SQL</type>
      <sql>SET hive.msck.path.validation=ignore;
MSCK REPAIR TABLE yellow_raw;
MSCK REPAIR TABLE green_raw;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>160</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Create Final partition Green</name>
      <description/>
      <type>SQL</type>
      <sql>Create TABLE IF NOT EXISTS green_part (	
	VendorID FLOAT,
	transports INT,
	one_p INT,
	two_p INT,
	three_p INT,
	four_p INT,
	more_p INT,
	avg_passanger FLOAT,
	avg_distance FLOAT, 
	avg_rate FLOAT,
	avg_fare FLOAT,
	05_extra INT,
	1_extra INT,
	tax INT,
	surcharge INT,
	avg_trip FLOAT,
	avg_toll FLOAT,
	avg_total FLOAT,
	credit_card_total INT,
	cash INT,
	no_charge INT,
	dispute INT,
	unknwn INT,
	voided_trip INT,
	standard_rate INT,
	jfk INT,
	newark INT,
	nessau_or_westchester INT,
	negotiated_fare INT,
	group_ride INT,
	SaF INT,
	no_SaF INT,
	street_hail INT,
	dispatch INT
) partitioned by (tmonth Int)
STORED AS ORC
LOCATION 'hdfs://localhost:9000/user/hadoop/green_raw/green'
TBLPROPERTIES ('transactional'='true');</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>3</nr>
      <xloc>544</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Abort job on Preparation</name>
      <description/>
      <type>ABORT</type>
      <message>Abort job on Preparation</message>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>160</xloc>
      <yloc>272</yloc>
    </entry>
    <entry>
      <name>Abort job on Write to Partitions</name>
      <description/>
      <type>ABORT</type>
      <message>Abort job on Write to Partitions</message>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>2</nr>
      <xloc>1008</xloc>
      <yloc>272</yloc>
    </entry>
    <entry>
      <name>Write AVG to partition Green</name>
      <description/>
      <type>SQL</type>
      <sql>set hive.exec.dynamic.partition.mode=nonstrict;
insert overwrite table green_part partition(tmonth)
select 
	AVG(gr.VendorID) ,
	count(*),
	count(case passenger_count when 1 then 1 else null end),
	count(case passenger_count when 2 then 1 else null end),
	count(case passenger_count when 3 then 1 else null end),
	count(case passenger_count when 4 then 1 else null end),
	count(case when passenger_count > 4 then 1 else null end),
	AVG(gr.passenger_count) ,
	AVG(gr.trip_distance) , 
	AVG(gr.RatecodeID) ,
	AVG(gr.fare_amount) ,
	count(case extra when 0.5 then 1 else null end),
	count(case extra when 1 then 1 else null end),
	count(case mta_tax when 0.5 then 1 else null end),
	count(case when improvement_surcharge = 0.3000 then 1 else null end),
	AVG(gr.tip_amount) ,
	AVG(gr.tolls_amount) ,
	AVG(gr.total_amount),
	count(case payment_type when 1 then 1 else null end),
 	count(case payment_type when 2 then 1 else null end),
 	count(case payment_type when 3 then 1 else null end),
 	count(case payment_type when 4 then 1 else null end),
 	count(case payment_type when 5 then 1 else null end),
 	count(case payment_type when 6 then 1 else null end),
	count(case RatecodeID when 1 then 1 else null end),
 	count(case RatecodeID when 2 then 1 else null end),
 	count(case RatecodeID when 3 then 1 else null end),
 	count(case RatecodeID when 4 then 1 else null end),
 	count(case RatecodeID when 5 then 1 else null end),
 	count(case RatecodeID when 6 then 1 else null end),
	count(case when Store_and_fwd_flag = 'Y' then 1 else null end),
 	count(case when Store_and_fwd_flag = 'N' then 1 else null end),
	count(case when trip_type = 1 then 1 else null end),
 	count(case when trip_type = 2 then 1 else null end),		
	MONTH(gr.lpep_pickup_datetime)
from green_raw gr WHERE MONTH(gr.lpep_pickup_datetime) IS NOT NULL GROUP BY gr.VendorID, MONTH(gr.lpep_pickup_datetime);</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>1008</xloc>
      <yloc>160</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>Create Final partition Yellow</from>
      <to>Abort job on creating Partitions</to>
      <from_nr>2</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Preparation</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Preparation</from>
      <to>Create Final partition Yellow</to>
      <from_nr>0</from_nr>
      <to_nr>2</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create Final partition Yellow</from>
      <to>Create Final partition Green</to>
      <from_nr>2</from_nr>
      <to_nr>3</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create Final partition Green</from>
      <to>Abort job on creating Partitions</to>
      <from_nr>3</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Preparation</from>
      <to>Abort job on Preparation</to>
      <from_nr>0</from_nr>
      <to_nr>1</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Write AVG to partition Yellow</from>
      <to>Write AVG to partition Green</to>
      <from_nr>0</from_nr>
      <to_nr>1</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Write AVG to partition Yellow</from>
      <to>Abort job on Write to Partitions</to>
      <from_nr>0</from_nr>
      <to_nr>2</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Write AVG to partition Green</from>
      <to>Abort job on Write to Partitions</to>
      <from_nr>1</from_nr>
      <to_nr>2</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create Final partition Green</from>
      <to>Write AVG to partition Yellow</to>
      <from_nr>3</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Write AVG to partition Green</from>
      <to>Success</to>
      <from_nr>1</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
</job>
